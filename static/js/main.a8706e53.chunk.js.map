{"version":3,"sources":["shared/utilities.js","components/loans/loansSlice.js","components/LoanForm.js","components/loans/Loans.js","App.js","app/store.js","index.js"],"names":["locale","loansSlice","createSlice","name","initialState","list","creditor","amount","fee","apr","reducers","addLoan","state","action","push","payload","Number","removeLoan","splice","actions","loansSelector","loans","localeCurrency","number","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","localePercent","window","navigator","languages","userLanguage","language","LoanForm","dispatch","useDispatch","useState","setCreditor","setAmount","setFee","setApr","className","onSubmit","e","preventDefault","target","reset","onReset","htmlFor","type","id","placeholder","value","onChange","required","step","Loans","useSelector","totalAmount","reduce","sum","loan","data-text","map","index","onClick","colSpan","total","a","b","App","rootReducer","combineReducers","loansReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a8706e53.chunk.js","sourcesContent":["// https://gist.github.com/mizrael/50c10be8ec92264751187d7705362eb2\nlet locale;\nif (window.navigator.languages) {\n  locale = window.navigator.languages[0];\n} else {\n  locale = window.navigator.userLanguage || window.navigator.language;\n}\n\nexport function localeCurrency(number) {\n  return number.toLocaleString(locale, {\n    style: 'currency',\n    currency: 'SEK',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  });\n}\n\n// This expects a whole number (i.e. 7.2 for 7.2%) rather than fractions (0.072), to encourage\n// storing data in that format. This is because fractions are more prone to quirky rounding errors,\n// for example:\n//  12.345 / 100 == 0.12345\n//  12.456 / 100 == 0.12455999999999999\nexport function localePercent(number) {\n  return (number / 100).toLocaleString(locale, {\n    style: 'percent',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  });\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const loansSlice = createSlice({\n  name: 'loans',\n  initialState: {\n    list: [\n      // sample data:\n      {\n        creditor: 'Ikanobanken',\n        amount: 36000,\n        fee: 50,\n        apr: 7.54\n      }, {\n        creditor: 'Brocc',\n        amount: 150000,\n        fee: 0,\n        apr: 5.2\n      }\n    ]\n  },\n  reducers: {\n    // accepted payload: { creditor, amount, fee, apr }\n    addLoan: (state, action) => {\n      state.list.push({\n        creditor: action.payload.creditor,\n        amount:   Number(action.payload.amount),\n        fee:      Number(action.payload.fee),\n        apr:      Number(action.payload.apr)\n      });\n    },\n    // accepted payload: index (int)\n    removeLoan: (state, action) => {\n      state.list.splice(action.payload, 1);\n    }\n  }\n});\n\nexport const { addLoan, removeLoan } = loansSlice.actions;\nexport const loansSelector = state => state.loans.list;\n\nexport default loansSlice.reducer;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addLoan } from './loans/loansSlice';\n\nfunction LoanForm() {\n  const dispatch = useDispatch();\n  const [creditor, setCreditor] = useState('');\n  const [amount, setAmount] = useState();\n  const [fee, setFee] = useState();\n  const [apr, setApr] = useState();\n\n  const handleSubmit = function(e) {\n    e.preventDefault();\n    dispatch(addLoan({ creditor, amount, fee, apr }));\n    e.target.reset();\n  }\n\n  const handleReset = function() {\n    setCreditor('');\n    setAmount();\n    setFee();\n    setApr();\n  }\n\n  return (\n    <form className=\"u-display-contents\" onSubmit={handleSubmit} onReset={handleReset}>\n      <label htmlFor=\"creditor\" className=\"grid__item field\">\n        <span className=\"field__label\">Creditor</span>\n        <span className=\"field__inputWrapper\">\n          <input\n            type=\"text\"\n            id=\"creditor\"\n            placeholder=\"Creditor name\"\n            value={creditor}\n            onChange={e => setCreditor(e.target.value)}\n            className=\"field__input\"\n            required\n          />\n        </span>\n      </label>\n\n      <label htmlFor=\"amount\" className=\"grid__item grid__item--numerical field\">\n        <span className=\"field__label\">Loan amount</span>\n        <span className=\"field__inputWrapper\">\n          <input\n            type=\"number\"\n            id=\"amount\"\n            placeholder=\"0\"\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            className=\"field__input\"\n            required\n          />\n          <span className=\"field__suffix\">kr</span>\n        </span>\n      </label>\n\n      <label htmlFor=\"fee\" className=\"grid__item grid__item--numerical field\">\n        <span className=\"field__label\">Monthly fees</span>\n        <span className=\"field__inputWrapper\">\n          <input\n            type=\"number\"\n            id=\"fee\"\n            placeholder=\"0\"\n            value={fee}\n            onChange={e => setFee(e.target.value)}\n            className=\"field__input\"\n            required\n          />\n          <span className=\"field__suffix\">kr</span>\n        </span>\n      </label>\n\n      <label htmlFor=\"apr\" className=\"grid__item grid__item--numerical field\">\n        <span className=\"field__label\">APR</span>\n        <span className=\"field__inputWrapper\">\n          <input\n            type=\"number\"\n            id=\"apr\"\n            step=\"0.01\"\n            placeholder=\"0\"\n            value={apr}\n            onChange={e => setApr(e.target.value)}\n            className=\"field__input\"\n            required\n          />\n          <span className=\"field__suffix\">%</span>\n        </span>\n      </label>\n\n      <div className=\"grid__item\">\n        <button type=\"submit\" className=\"button button--primary\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default LoanForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { removeLoan, loansSelector } from './loansSlice';\nimport { localeCurrency, localePercent } from '../../shared/utilities';\nimport LoanForm from '../LoanForm';\n\nfunction Loans() {\n  const loans = useSelector(loansSelector);\n  const dispatch = useDispatch();\n\n  const totalAmount = function() {\n    return loans.reduce((sum, loan) => sum + loan.amount, 0);\n  }\n\n  const totalFee = function() {\n    return loans.reduce((total, loan) => total + loan.fee, 0);\n  }\n\n  // multiplies each loan amount with their APR, sums them together,\n  // and divides that by the total loan amount\n  const totalAPR = function() {\n    if (!totalAmount()) return 0;\n\n    // note that the values in this array is not representative of what the *actual* value would be,\n    // as it uses the percent-number (i.e. 5.2) instead of the actual rate (0.052), but as we're\n    // only interested in the total percent-number here, converting the rate back and forth would\n    // just be an unnecessary extra calculation (and more prone to rounding errors...)\n    const values = loans.map(loan => loan.amount * loan.apr);\n\n    return values.reduce((a, b) => a + b, 0) / totalAmount();\n  }\n\n  return (\n    <table className=\"grid\">\n      <thead className=\"u-display-contents\">\n        <tr className=\"u-display-contents\">\n          <th className=\"grid__item grid__item--header\">Creditor name</th>\n          <th className=\"grid__item grid__item--header grid__item--numerical\">Loan amount</th>\n          <th className=\"grid__item grid__item--header grid__item--numerical\">Monthly fees</th>\n          <th className=\"grid__item grid__item--header grid__item--numerical\">\n            <span className=\"helpText\" data-text=\"Annual Percentage Rate\">APR</span>\n          </th>\n          <th className=\"grid__item\"></th>\n        </tr>\n      </thead>\n      <tbody className=\"u-display-contents\">\n        {loans.map((loan, index) => (\n          <tr key={index} className=\"u-display-contents\">\n            <td className=\"grid__item\">{loan.creditor}</td>\n            <td className=\"grid__item grid__item--numerical\">{localeCurrency(loan.amount)}</td>\n            <td className=\"grid__item grid__item--numerical\">{localeCurrency(loan.fee)}</td>\n            <td className=\"grid__item grid__item--numerical\">{localePercent(loan.apr)}</td>\n            <td className=\"grid__item\">\n              <button\n                onClick={() => dispatch(removeLoan(index))}\n                className=\"button button--danger button--small\"\n              >\n                Remove\n              </button>\n            </td>\n          </tr>\n        ))}\n        <tr className=\"u-display-contents\">\n          <td colSpan=\"5\" className=\"u-display-contents\">\n            <LoanForm />\n          </td>\n        </tr>\n      </tbody>\n      <tfoot className=\"u-display-contents\">\n        <tr className=\"u-display-contents\">\n          <td className=\"grid__item grid__item--footer\">Total</td>\n          <td className=\"grid__item grid__item--footer grid__item--numerical\">{localeCurrency(totalAmount())}</td>\n          <td className=\"grid__item grid__item--footer grid__item--numerical\">{localeCurrency(totalFee())}</td>\n          <td className=\"grid__item grid__item--footer grid__item--numerical\">{localePercent(totalAPR())}</td>\n          <td className=\"grid__item\"></td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n}\n\nexport default Loans;\n","import './App.scss';\nimport Loans from './components/loans/Loans';\n\nfunction App() {\n  return (\n    <Loans />\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from 'redux-persist';\n// localStore:\n// import storage from 'redux-persist/lib/storage';\n// sessionStore:\nimport storage from 'redux-persist/lib/storage/session';\nimport loansReducer from '../components/loans/loansSlice';\n\nconst rootReducer = combineReducers({\n  loans: loansReducer\n});\n\nconst persistConfig = { key: 'root', storage };\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      // https://github.com/rt2zz/redux-persist/issues/988#issuecomment-552242978\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n})\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './app/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}